-- Table: UserActivity

-- +---------------+---------+
-- | Column Name   | Type    |
-- +---------------+---------+
-- | username      | varchar |
-- | activity      | varchar |
-- | startDate     | Date    |
-- | endDate       | Date    |
-- +---------------+---------+
-- This table does not contain primary key.
-- This table contain information about the activity performed of each user in a period of time.
-- A person with username performed a activity from startDate to endDate.

-- Write an SQL query to show the second most recent activity of each user.

-- If the user only has one activity, return that one. 

-- A user can't perform more than one activity at the same time. Return the result table in any order.

-- The query result format is in the following example:

-- UserActivity table:
-- +------------+--------------+-------------+-------------+
-- | username   | activity     | startDate   | endDate     |
-- +------------+--------------+-------------+-------------+
-- | Alice      | Travel       | 2020-02-12  | 2020-02-20  |
-- | Alice      | Dancing      | 2020-02-21  | 2020-02-23  |
-- | Alice      | Travel       | 2020-02-24  | 2020-02-28  |
-- | Bob        | Travel       | 2020-02-11  | 2020-02-18  |
-- +------------+--------------+-------------+-------------+

-- Result table:
-- +------------+--------------+-------------+-------------+
-- | username   | activity     | startDate   | endDate     |
-- +------------+--------------+-------------+-------------+
-- | Alice      | Dancing      | 2020-02-21  | 2020-02-23  |
-- | Bob        | Travel       | 2020-02-11  | 2020-02-18  |
-- +------------+--------------+-------------+-------------+

-- The most recent activity of Alice is Travel from 2020-02-24 to 2020-02-28, before that she was dancing from 2020-02-21 to 2020-02-23.
-- Bob only has one record, we just take that one.


-- #1 solution
--#sql server
#using 'case when' in where clause
select 
		[username] 
      ,[activity]
      ,[startDate]
      ,[endDate]
from (
SELECT  [username]
      ,[activity]
      ,[startDate]
      ,[endDate]
	  ,rank() over (partition by [username] order by [startDate]) as r
	  ,count([activity]) over (partition by [username]) as c
  FROM [master].[dbo].[1369_UserActivity]
  )u
  where u.r=(case when u.c>1 then 2 else 1 end)

-- #2 solution
-- # mysql
Select username,
	activity,
	startDate,
	endDate
from(
Select   username,
	activity,
	startDate,
	endDate,
	rank()over(partition by username order by startDate) r,
	count(startDate)over(partition by username ) c
From 1369_UserActivity)a
where c=1 or c>1 and r=1 ;


-- create table 1369_UserActivity
-- (username       varchar(10) ,
-- activity       varchar(10) ,
-- startDate      Date    ,
-- endDate        Date    );
-- Insert into 1369_UserActivity values
-- ('Alice'      ,'Travel'       ,'2020-02-12','2020-02-20'),
-- ('Alice'      ,'Dancing'      ,'2020-02-21','2020-02-23'),
-- ('Alice'      ,'Travel'       ,'2020-02-24','2020-02-28'),
-- ('Bob'        ,'Travel'       ,'2020-02-11','2020-02-18'); 