-- The Trips table holds all taxi trips. Each trip has a unique Id, while Client_Id and Driver_Id are both foreign keys to the Users_Id at the Users table. Status is an ENUM type of (‘completed’, ‘cancelled_by_driver’, ‘cancelled_by_client’).

-- +----+-----------+-----------+---------+--------------------+----------+
-- | Id | Client_Id | Driver_Id | City_Id |        Status      |Request_at|
-- +----+-----------+-----------+---------+--------------------+----------+
-- | 1  |     1     |    10     |    1    |     completed      |2013-10-01|
-- | 2  |     2     |    11     |    1    | cancelled_by_driver|2013-10-01|
-- | 3  |     3     |    12     |    6    |     completed      |2013-10-01|
-- | 4  |     4     |    13     |    6    | cancelled_by_client|2013-10-01|
-- | 5  |     1     |    10     |    1    |     completed      |2013-10-02|
-- | 6  |     2     |    11     |    6    |     completed      |2013-10-02|
-- | 7  |     3     |    12     |    6    |     completed      |2013-10-02|
-- | 8  |     2     |    12     |    12   |     completed      |2013-10-03|
-- | 9  |     3     |    10     |    12   |     completed      |2013-10-03| 
-- | 10 |     4     |    13     |    12   | cancelled_by_driver|2013-10-03|
-- +----+-----------+-----------+---------+--------------------+----------+
-- The Users table holds all users. Each user has an unique Users_Id, and Role is an ENUM type of (‘client’, ‘driver’, ‘partner’).

-- +----------+--------+--------+
-- | Users_Id | Banned |  Role  |
-- +----------+--------+--------+
-- |    1     |   No   | client |
-- |    2     |   Yes  | client |
-- |    3     |   No   | client |
-- |    4     |   No   | client |
-- |    10    |   No   | driver |
-- |    11    |   No   | driver |
-- |    12    |   No   | driver |
-- |    13    |   No   | driver |
-- +----------+--------+--------+
-- Write a SQL query to find the cancellation rate of requests made by unbanned users (both client and driver must be unbanned) between Oct 1, 2013 and Oct 3, 2013. The cancellation rate is computed by dividing the number of canceled (by client or driver) requests made by unbanned users by the total number of requests made by unbanned users.

-- For the above tables, your SQL query should return the following rows with the cancellation rate being rounded to two decimal places.

-- +------------+-------------------+
-- |     Day    | Cancellation Rate |
-- +------------+-------------------+
-- | 2013-10-01 |       0.33        |
-- | 2013-10-02 |       0.00        |
-- | 2013-10-03 |       0.50        |
-- +------------+-------------------+
-- Credits:
-- Special thanks to @cak1erlizhou for contributing this question, writing the problem description and adding part of the test cases.



#solution 1
#SQL Server
select  [request_at]  Day ,
		cast(round(cast(sum(case when [status]!='completed' then 1 else 0 end) as decimal(9,2))/count(*),2)as decimal(9,2))'Cancellation Rate'
from(
 SELECT [client_id]
      ,[driver_id]
      ,[status]
      ,[request_at]
  FROM [master].[dbo].[262_trips] t
  join[262_users]p
  on t.[client_id]=p.users_id
  join[262_users]p1
  on t.[driver_id]=p1.users_id
  where p.banned !='Yes' and p1.banned !='Yes' and[request_at] between '2013-10-01' and '2013-10-03'
)a
group by [request_at];

#solution 1
#Mysql

select Request_at as Day,round(sum(case when status='cancelled_by_driver' or status='cancelled_by_client' then 1 else 0 end)/count(*),2) 'Cancellation Rate'
from 262_trips t
join 262_users s1
on t.client_id=s1.users_id
join 262_users s2
on t.client_id=s2.users_id
where s1.banned='No' and s2.banned='No' and request_at  between '2013-10-01' and '2013-10-03'
group by Request_at;



create table 262_lookup_trips_status
(id int auto_increment,
status char(30) not null,
index(status),
primary key(id, status));

insert into 262_lookup_trips_status values
(1,'completed'),
(2, 'cancelled_by_client'),
(3, 'cancelled_by_driver');

create table 262_lookup_users_role 
(id int auto_increment,
role char(6),
index(role),
primary key(id,role));

insert into 262_lookup_users_role values
(1,'client'),
(2,'driver');

create table 262_users
(users_id int auto_increment,
banned char(3) not null check(banned in ('No','Yes')) ,
role char(6) not null,
primary key(users_id),
index(role),
constraint fk_262_users_role_262_lookup_users_role foreign key(role) references 262_lookup_users_role(role) on delete cascade on update cascade);

insert into 262_users values
(1     ,   'No'   ,'client' ),
(    2     ,   'Yes'  ,'client' ),
(    3     ,   'No'   ,'client' ),
(    4     ,   'No'   ,'client' ),
(    10    ,   'No'   ,'driver' ),
(    11    ,   'No'   ,'driver' ),
(    12    ,   'No'   ,'driver' ),
(    13    ,   'No'   ,'driver');

create table 262_trips
(id int AUTO_INCREMENT,
client_id int not null,
driver_id int not null,
city_id int not null,
status char(30) not null,
request_at date not null,
primary key(id),
index(status),
constraint fk_262_trips_status_262_lookup_trips_status foreign key(status) references 262_lookup_trips_status(status) on delete cascade on update cascade,
index(client_id),
constraint fk_262_trips_client_id_262_users_id foreign key(client_id) references 262_users(users_id)  on delete cascade on update cascade,
index(driver_id),
constraint fk_262_trips_driver_id_262_users_id foreign key(driver_id) references 262_users(users_id)  on delete cascade on update cascade);

insert into 262_trips values
(1  ,     1     ,    10     ,    1    ,     'completed'      ,'2013-10-01'),
(2  ,     2     ,    11     ,    1    , 'cancelled_by_driver','2013-10-01'),
(3  ,     3     ,    12     ,    6    ,     'completed'      ,'2013-10-01'),
(4  ,     4     ,    13     ,    6    , 'cancelled_by_client','2013-10-01'),
(5  ,     1     ,    10     ,    1    ,     'completed'      ,'2013-10-02'),
(6  ,     2     ,    11     ,    6    ,     'completed'      ,'2013-10-02'),
(7  ,     3     ,    12     ,    6    ,     'completed'      ,'2013-10-02'),
(8  ,     2     ,    12     ,    12   ,     'completed'      ,'2013-10-03'),
(9  ,     3     ,    10     ,    12   ,     'completed'      ,'2013-10-03'),
(10 ,     4     ,    13     ,    12   , 'cancelled_by_driver','2013-10-03');