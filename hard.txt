
#114 Total sales amount by year
#1
with cte as (
select 
	product_id,
	DATEPART(year, period_start) as ys,
	DATEPART(year, period_start) as ysadd,
	DATEPART(year, period_end) as ye,
	period_start,
	period_end,
	average_daily_sales
from [114_sales]
union  all
select 
	product_id,
	ys,
	ysadd+1 ,
	ye,
	period_start,
	period_end,
	average_daily_sales
from cte
where ysadd<ye)
SELECT 
	c.product_id,
	p.product_name,
	ysadd as report_year,
	case when ysadd=ys and ysadd=ye then (DATEDIFF(day,period_start,period_end)+1)*average_daily_sales
    when  ys<ysadd and ysadd=ye then DATEDIFF(day,datefromparts(ysadd-1, 12, 31),period_end)*average_daily_sales
	when  ys=ysadd and ysadd<ye then DATEDIFF(day,period_start,datefromparts(ysadd+1, 1, 1))*average_daily_sales
	else DATEDIFF(day,datefromparts(ysadd-1, 12, 31),datefromparts(ysadd, 12, 31))*average_daily_sales end as total_amount
from cte c
join [114_product] p
on c.product_id=p.product_id
where ys>=2018 and ye<=2020
order by c.product_id,ysadd;
select * from [114_sales];

#114 Total sales amount by year
#2
with a as (SELECT  [product_id]
      ,[period_start]
      ,[period_end]
      ,[average_daily_sales]
	  ,year([period_start])s
	  ,year([period_start])m
	  ,year([period_end])e
  FROM [master].[dbo].[114_sales]),
  b as (
  select [product_id],[period_start],[period_end],[average_daily_sales],s ,m,e
  from a
  union all
  select [product_id],[period_start],[period_end],[average_daily_sales],s,m+1,e
  from b 
  where m<e)

  select b.[product_id],
		[product_name],
		m report_year ,
 case when s<m and m<e then [average_daily_sales]*DATEPART(dy,DATEFROMPARTS(m,12,31))
  when m=s and m<e thenã€€[average_daily_sales]*(1+datediff(day,[period_start],DATEFROMPARTS(m,12,31)))--(datediff(day,[period_start],DATEADD(yy, DATEDIFF(yy, 0,[period_start]) + 1, -1))+1)
  when s<m and m=e then  [average_daily_sales]*DATEPART(dayofyear,[period_end])--(datediff(day,DATEADD(yy, DATEDIFF(yy, 0, [period_end]), 0),[period_end] ) +1)
  else [average_daily_sales]*(datediff(day,[period_start],[period_end] ) +1)
  end  total_amount
  from b
  left join [master].[dbo].[114_product]p
  on b.[product_id]=p.[product_id]
  where m between s and e
  order by  b.[product_id],
		    m
#109
#1
select 
	ss.group_id,
	ss.player_id
from(
	select s.player_id,
		   p.group_id
--		   ,sum(s.score) as total
		   ,rank() over (partition by p.group_id order by sum(s.score) desc,s.player_id asc ) as r
	from(
		SELECT [first_player] as player_id
			  ,[first_score] as score
		  FROM [master].[dbo].[109_matches]
		union all
		SELECT [second_player]
			  ,[second_score]
		  FROM [master].[dbo].[109_matches]
	) s
	join [109_players] p
	on s.player_id=p.player_id
	group by s.player_id,p.group_id
)ss
where ss.r=1
#114
#2
with a as (  
  SELECT [first_player] player_id  
      ,[first_score] score
  FROM [master].[dbo].[109_matches]
  union
  SELECT [second_player]
      ,[second_score]
  FROM [master].[dbo].[109_matches]
  ),
  b as (
  select player_id,sum(score)score
  from a
  group by player_id)

  select [group_id],
		player_id  
from(
  select b.player_id,
		[group_id],
		score,
		rank()over (partition by [group_id] order by b.player_id asc,score desc)r
  from b
  left join [109_players] p
  on b.player_id=p.player_id
  )c
  where r=1


#113
#other
select  
	a.spend_date, 
	a.platform,
	isnull(SUM(b.amount),0) total_amount,
	isnull(count(user_id),0) as total_users 
from(
select distinct spend_date, 'mobile' as platform  FROM [113_spending]
union 
select distinct spend_date, 'desktop' as platform FROM [113_spending]
union
select distinct spend_date, 'both' as platform  FROM [113_spending]
)a
left join
(SELECT 
	user_id,
	spend_date, 
	SUM(amount) amount,
	(CASE WHEN COUNT(DISTINCT platform)>1 THEN 'both' ELSE min(platform) END)as platform
FROM [113_spending]
GROUP BY 
	spend_date, 
	user_id)b
on a.spend_date=b.spend_date
and a.platform=b.platform
GROUP BY 
	a.spend_date,
	a.platform
order by 
	a.spend_date,
	a.platform

#113 my1
with a 	as (select *,
					count(platform) over (partition by spend_date,user_id) as nu
			from [113_spending]),
s as (
		select 
			distinct aa.spend_date,
				ss.platform
		from  [113_spending] aa
		cross join (
					select 
						distinct platform 
					from [113_spending]
					union 
					select 'both'
					)ss
	)

select 
	s.spend_date,
	s.platform,
	isnull(b.total_amount,0) as total_amount,
	isnull(b.total_users,0) as total_users
from s
left join(
select 
	a.spend_date,
	'both' as platform ,
	sum(a.amount) as total_amount,
	count(distinct a.user_id) as total_users
from a 
where a.nu=2 
group by a.spend_date
union 
select 
	a.spend_date,
	a.platform ,
	sum(a.amount) as total_amount,
	count(a.user_id) as total_users
from a 
where a.nu=1 
group by a.spend_date,
		 a.platform
		)b
on s.spend_date=b.spend_date 
and s.platform=b.platform
#113 my2
select  s.[spend_date],
		isnull(b.[platform],'both')[platform],
		isnull( b.total_amount,0)total_amount ,
		isnull(b.total_users ,0)total_users
from 
	(SELECT DISTINCT(spend_date), 'desktop' platform FROM [113_spending]
	UNION
	SELECT DISTINCT(spend_date), 'mobile' platform FROM [113_spending]
	UNION
	SELECT DISTINCT(spend_date), 'both' platform FROM [113_spending]
	)s
left join 
	(select [spend_date],
			p [platform],
			case when p='both' then count(distinct user_id) else count( user_id)end total_users ,
			sum([amount])total_amount 
	from(
		SELECT [user_id]
			  ,[spend_date]
			  ,[platform]
			  ,[amount]
			  ,case when count([platform])over(partition by [user_id],[spend_date])>1 then 'both' else [platform] end p
		  FROM [master].[dbo].[113_spending]
		  )a
		  group by [spend_date],
				p
	)b
on s.spend_date=b.spend_date and s.[platform]=b.[platform]

#101 Number of transactions per visit
  with t1 as (
  select c,count(c)visits_count 
  from(
  SELECT e.user_id,visit_date ,sum(case when t.user_id is null then 0 else 1 end) c
  FROM [master].[dbo].[101_visits]e
  left join [master].[dbo].[101_transactions]t
  on e.[user_id]=t.[user_id] and e.[visit_date]=t.[transaction_date]
  group by e.user_id,visit_date
  )a
  group by c
  ),
  t as(
 select max(c) as transactions_count
 from t1
 union all
 select transactions_count -1
 from t
 where transactions_count >0
 )

  select transactions_count ,isnull(visits_count,0)visits_count
  from t
  left join t1
  on t.transactions_count =t1.c
  order by transactions_count 

#98 Trips and Users
select  [request_at]  Day ,
		cast(round(cast(sum(case when [status]!='completed' then 1 else 0 end) as decimal(9,2))/count(*),2)as decimal(9,2))'Cancellation Rate'
from(
 SELECT [client_id]
      ,[driver_id]
      ,[status]
      ,[request_at]
  FROM [master].[dbo].[98_trips] t
  join[98_users]p
  on t.[client_id]=p.users_id
  join[98_users]p1
  on t.[driver_id]=p1.users_id
  where p.banned !='Yes' and p1.banned !='Yes' and[request_at] between '2013-10-01' and '2013-10-03'
)a
group by [request_at]
