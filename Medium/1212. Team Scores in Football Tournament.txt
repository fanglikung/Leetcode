-- Table: Teams

-- +---------------+----------+
-- | Column Name   | Type     |
-- +---------------+----------+
-- | team_id       | int      |
-- | team_name     | varchar  |
-- +---------------+----------+
-- team_id is the primary key of this table.
-- Each row of this table represents a single football team.


-- Table: Matches

-- +---------------+---------+
-- | Column Name   | Type    |
-- +---------------+---------+
-- | match_id      | int     |
-- | host_team     | int     |
-- | guest_team    | int     | 
-- | host_goals    | int     |
-- | guest_goals   | int     |
-- +---------------+---------+
-- match_id is the primary key of this table.
-- Each row is a record of a finished match between two different teams. 
-- Teams host_team and guest_team are represented by their IDs in the teams table (team_id) and they scored host_goals and guest_goals goals respectively.




-- You would like to compute the scores of all teams after all matches. Points are awarded as follows:
-- A team receives three points if they win a match (Score strictly more goals than the opponent team).
-- A team receives one point if they draw a match (Same number of goals as the opponent team).
-- A team receives no points if they lose a match (Score less goals than the opponent team).
-- Write an SQL query that selects the team_id, team_name and num_points of each team in the tournament after all described matches. Result table should be ordered by num_points (decreasing order). In case of a tie, order the records by team_id (increasing order).

-- The query result format is in the following example:

-- Teams table:
-- +-----------+--------------+
-- | team_id   | team_name    |
-- +-----------+--------------+
-- | 10        | Leetcode FC  |
-- | 20        | NewYork FC   |
-- | 30        | Atlanta FC   |
-- | 40        | Chicago FC   |
-- | 50        | Toronto FC   |
-- +-----------+--------------+

-- Matches table:
-- +------------+--------------+---------------+-------------+--------------+
-- | match_id   | host_team    | guest_team    | host_goals  | guest_goals  |
-- +------------+--------------+---------------+-------------+--------------+
-- | 1          | 10           | 20            | 3           | 0            |
-- | 2          | 30           | 10            | 2           | 2            |
-- | 3          | 10           | 50            | 5           | 1            |
-- | 4          | 20           | 30            | 1           | 0            |
-- | 5          | 50           | 30            | 1           | 0            |
-- +------------+--------------+---------------+-------------+--------------+

-- Result table:
-- +------------+--------------+---------------+
-- | team_id    | team_name    | num_points    |
-- +------------+--------------+---------------+
-- | 10         | Leetcode FC  | 7             |
-- | 20         | NewYork FC   | 3             |
-- | 50         | Toronto FC   | 3             |
-- | 30         | Atlanta FC   | 1             |
-- | 40         | Chicago FC   | 0             |
-- +------------+--------------+---------------+



#1 solution
#SQL Server
with a as 
(SELECT [host_team],
		case when [host_goals]>[guest_goals] then 3 
			 when [host_goals]=[guest_goals] then 1 
		else 0 end as host_goals,     
		[guest_team],
		case when [host_goals]>[guest_goals] then 0 
			 when [host_goals]=[guest_goals] then 1 
		else 3 end as guest_goals
FROM [master].[dbo].[1212_matches]),
b as 
(SELECT  [host_team] as team_id  ,
		 host_goals as num_points 
 from a 
 union all
 SELECT [guest_team],
		 guest_goals
 from a),
 c as 
 (select team_id,
		 sum(num_points) as num_points 
  from b 
  group by team_id)

select t.team_id,
	   t.team_name,
	   isnull(c.num_points,0) as num_points
from [1212_teams] t
left join c
on t.team_id=c.team_id
order by 
	c.num_points desc, 
	t.team_id asc


						



#1 solution
#mysql

Select t.team_id,
	t.team_name,
	ifnull(sum(m.num_points),0) as num_points
from 1212_teams t
Left join 
(
Select host_team team_id, 
case when host_goals-guest_goals>0 then 3
     When host_goals-guest_goals =0 then 1
     else 0 end as num_points
From 1212_matches
Union all
Select guest_team team_id,  
case when guest_goals-host_goals>0 then 3
     When guest_goals-host_goals=0 then 1
     else 0 end as num_points
From 1212_matches) m
On t.team_id=m.team_id
Group by t.team_id,t.team_name
Order by num_points desc, t.team_id asc;




Create table 1212_matches
(match_id       int     ,
host_team      int ,
guest_team     int , 
host_goals     int ,
guest_goals    int,
Primary key(match_id));

Insert into 1212_matches values
(1          , 10           , 20            , 3           , 0     ),
(2          , 30           , 10            , 2           , 2 ),
(3          , 10           , 50            , 5           , 1 ),
(4          , 20           , 30            , 1           , 0 ),
(5          , 50           , 30            , 1           , 0 );

Create table 1212_teams
(team_id        int      ,
team_name      varchar(15),
Primary key(team_id));

Insert into 1212_teams values
(10        ,'Leetcode FC'  ),
(20        ,'NewYork FC'),
(30        ,'Atlanta FC'),
(40        ,'Chicago FC'),
(50        ,'Toronto FC');
