-- Table: Traffic

-- +---------------+---------+
-- | Column Name   | Type    |
-- +---------------+---------+
-- | user_id       | int     |
-- | activity      | enum    |
-- | activity_date | date    |
-- +---------------+---------+
-- There is no primary key for this table, it may have duplicate rows.
-- The activity column is an ENUM type of ('login', 'logout', 'jobs', 'groups', 'homepage').


-- Write an SQL query that reports for every date within at most 90 days from today, 
-- the number of users that logged in for the first time on that date. Assume today is 2019-06-30.

-- The query result format is in the following example:

-- Traffic table:
-- +---------+----------+---------------+
-- | user_id | activity | activity_date |
-- +---------+----------+---------------+
-- | 1       | login    | 2019-05-01    |
-- | 1       | homepage | 2019-05-01    |
-- | 1       | logout   | 2019-05-01    |
-- | 2       | login    | 2019-06-21    |
-- | 2       | logout   | 2019-06-21    |
-- | 3       | login    | 2019-01-01    |
-- | 3       | jobs     | 2019-01-01    |
-- | 3       | logout   | 2019-01-01    |
-- | 4       | login    | 2019-06-21    |
-- | 4       | groups   | 2019-06-21    |
-- | 4       | logout   | 2019-06-21    |
-- | 5       | login    | 2019-03-01    |
-- | 5       | logout   | 2019-03-01    |
-- | 5       | login    | 2019-06-21    |
-- | 5       | logout   | 2019-06-21    |
-- +---------+----------+---------------+


-- Result table:
-- +------------+-------------+
-- | login_date | user_count  |
-- +------------+-------------+
-- | 2019-05-01 | 1           |
-- | 2019-06-21 | 2           |
-- +------------+-------------+
-- Note that we only care about dates with non zero user count.
-- The user with id 5 first logged in on 2019-03-01 so he's not counted on 2019-06-21.

#2 solution 
#SQL server
select 
	a.login_date login_date ,
	count([user_id] )user_count  
from(
SELECT [user_id] 
      ,min([activity_date])login_date
FROM [master].[dbo].[1107_traffic]
where [activity]='login' 
group by [user_id]
) a
where a.[login_date] between dateadd(day,-90,'2019-06-30') and '2019-06-30'
group by a.[login_date]

#1 solution
#mysql

Select activity_date,count(user_id) user_count
from(
Select user_id,
       min(activity_date) activity_date
From 1107_traffic
Where activity='login'	
Group by user_id)a
Where datediff('2019-06-30',activity_date)<=90
Group by activity_date;



Create table 1107_traffic
(user_id int,
activity varchar(8) check (activity in ('login', 'logout', 'jobs', 'groups', 'homepage')),
activity_date date);

Insert into 1107_traffic values
(1       , 'login'    ,'2019-05-01'    ),
(1    ,'homepage' ,'2019-05-01'    ),
(1     ,'logout'   ,'2019-05-01'    ),
(2       ,'login'    ,'2019-06-21'    ),
(2       ,'logout'   ,'2019-06-21'    ),
(3       ,'login'    ,'2019-01-01'    ),
(3       ,'jobs'     ,'2019-01-01'    ),
(3       ,'logout'   ,'2019-01-01'    ),
(4       ,'login'    ,'2019-06-21'    ),
(4       ,'groups'   ,'2019-06-21'    ),
(4       ,'logout'   ,'2019-06-21'    ),
(5       ,'login'    ,'2019-03-01'    ),
(5       ,'logout'   ,'2019-03-01'   ),
(5       ,'login'    ,'2019-06-21'  ),
(5       ,'logout'   ,'2019-06-21' );