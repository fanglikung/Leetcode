-- Table: Sales

-- +-------------+-------+
-- | Column Name | Type  |
-- +-------------+-------+
-- | sale_id     | int   |
-- | product_id  | int   |
-- | year        | int   |
-- | quantity    | int   |
-- | price       | int   |
-- +-------------+-------+
-- sale_id is the primary key of this table.
-- product_id is a foreign key to Product table.
-- Note that the price is per unit.




-- Table: Product

-- +--------------+---------+
-- | Column Name  | Type    |
-- +--------------+---------+
-- | product_id   | int     |
-- | product_name | varchar |
-- +--------------+---------+
-- product_id is the primary key of this table.


-- Write an SQL query that selects the product id, year, quantity, and price for the first year of every product sold.

-- The query result format is in the following example:

-- Sales table:
-- +---------+------------+------+----------+-------+
-- | sale_id | product_id | year | quantity | price |
-- +---------+------------+------+----------+-------+ 
-- | 1       | 100        | 2008 | 10       | 5000  |
-- | 2       | 100        | 2009 | 12       | 5000  |
-- | 7       | 200        | 2011 | 15       | 9000  |
-- +---------+------------+------+----------+-------+

-- Product table:
-- +------------+--------------+
-- | product_id | product_name |
-- +------------+--------------+
-- | 100        | Nokia        |
-- | 200        | Apple        |
-- | 300        | Samsung      |
-- +------------+--------------+

-- Result table:
-- +------------+------------+----------+-------+
-- | product_id | first_year | quantity | price |
-- +------------+------------+----------+-------+ 
-- | 100        | 2008       | 10       | 5000  |
-- | 200        | 2011       | 15       | 9000  |
-- +------------+------------+----------+-------+



#2 solution 
#SQL server
select u1.name results      
from(
	SELECT 
		  u.name,
		  rank() over(order by count(movie_id) desc,u.name asc) as rk
	  FROM [master].[dbo].[1341_movie_rating] r
	  left join [1341_users] u
	  on r.user_id=u.user_id
	  group by r.user_id,u.name
  ) u1
where u1.rk=1;
select m1.title results      
from(
	  SELECT 
		  m.title,
		  rank() over(order by avg( cast((r.rating)as decimal(9,2))) desc,m.title asc) as rk
	  FROM [master].[dbo].[1341_movie_rating] r
	  left join [1341_movies] m
	  on r.movie_id=m.movie_id
	  where FORMAT( r.created_at, 'yyyy-MM', 'en-US' ) ='2020-02'
	  group by r.movie_id,m.title
	  )m1
where m1.rk=1;

#1 solution
#mysql

Select product_id,
       year as first_year,
       quantity,
       price
from(
	select product_id,
	       year ,
                quantity,
               price,
               rank()over(partition by product_id order by year asc) r 
        from 1070_sales)a
Where r=1;





Create table 1341_movies(
movie_id int,
title varchar(10),
Primary key(movie_id));

Insert into 1341_movies values
(1           , 'Avengers'),     
(2           , 'Frozen 2'),
(3           , 'Joker');


Create table 1070_sales
(sale_id      int   ,
product_id   int   ,
year         int   ,
quantity     int   ,
price        int ,
Primary key(sale_id),
index(product_id),
Foreign key(product_id)references 1070_product(product_id));

Insert into 1070_sales values
(1       , 100        , 2008 , 10       , 5000  ),
(2       , 100        , 2009 , 12       , 5000  ),
(7       , 200        , 2011 , 15       , 9000 );

Create table 1070_product
(product_id    int     ,
product_name  varchar (10),
Primary key(product_id));

Insert into 1070_product values
(100        , 'Nokia'       ),
(200        , 'Apple'   ),
(300        ,'Samsung' );