--Table: Seat

--+-------------+---------+
--| Column Name | Type    |
--+-------------+---------+
--| id          | int     |
--| name        | varchar |
--+-------------+---------+
--id is the primary key column for this table.
--Each row of this table indicates the name and the ID of a student.
--id is a continuous increment.

 

--Write an SQL query to swap the seat id of every two consecutive students. 
--If the number of students is odd, the id of the last student is not swapped.

--Return the result table ordered by id in ascending order.

--The query result format is in the following example.

 

--Example 1:

--Input: 
--Seat table:
--+----+---------+
--| id | student |
--+----+---------+
--| 1  | Abbot   |
--| 2  | Doris   |
--| 3  | Emerson |
--| 4  | Green   |
--| 5  | Jeames  |
--+----+---------+
--Output: 
--+----+---------+
--| id | student |
--+----+---------+
--| 1  | Doris   |
--| 2  | Abbot   |
--| 3  | Green   |
--| 4  | Emerson |
--| 5  | Jeames  |
--+----+---------+
--Explanation: 
--Note that if the number of students is odd, there is no need to change the last one's seat.

--#1 solution
SELECT s1.[id]
	  ,case when s1.id%2=0 then s3.[student] 
		else isnull(s2.[student],s1.[student])end student 
  FROM [master].[dbo].[56_seats]s1
  left join [56_seats]s2
  on s1.id=s2.id-1
  left join [56_seats]s3
  on s1.id=s3.id+1
--#2 solution
--SELECT [id]
--      , case when id%2=0 then lag([student])over(order by id)
--		else isnull(lead([student])over(order by id) ,[student])end as student 
--  FROM [master].[dbo].[56_seats]
--#3  solution other
--select row_number() over (order by (case when id%2=1 then id+1 else id-1 end )) as id, 
--student
--from [56_seats]