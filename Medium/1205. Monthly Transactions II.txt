-- Table: Transactions

-- +----------------+---------+
-- | Column Name    | Type    |
-- +----------------+---------+
-- | id             | int     |
-- | country        | varchar |
-- | state          | enum    |
-- | amount         | int     |
-- | trans_date     | date    |
-- +----------------+---------+
-- id is the primary key of this table.
-- The table has information about incoming transactions.
-- The state column is an enum of type ["approved", "declined"].
-- Table: Chargebacks

-- +----------------+---------+
-- | Column Name    | Type    |
-- +----------------+---------+
-- | trans_id       | int     |
-- | charge_date    | date    |
-- +----------------+---------+
-- Chargebacks contains basic information regarding incoming chargebacks from some transactions placed in Transactions table.
-- trans_id is a foreign key to the id column of Transactions table.
-- Each chargeback corresponds to a transaction made previously even if they were not approved.
 

-- Write an SQL query to find for each month and country, the number of approved transactions and their total amount, the number of chargebacks and their total amount.

-- Note: In your query, given the month and country, ignore rows with all zeros.

-- The query result format is in the following example:

-- Transactions table:
-- +------+---------+----------+--------+------------+
-- | id   | country | state    | amount | trans_date |
-- +------+---------+----------+--------+------------+
-- | 101  | US      | approved | 1000   | 2019-05-18 |
-- | 102  | US      | declined | 2000   | 2019-05-19 |
-- | 103  | US      | approved | 3000   | 2019-06-10 |
-- | 104  | US      | approved | 4000   | 2019-06-13 |
-- | 105  | US      | approved | 5000   | 2019-06-15 |
-- +------+---------+----------+--------+------------+

-- Chargebacks table:
-- +------------+------------+
-- | trans_id   | charge_date|
-- +------------+------------+
-- | 102        | 2019-05-29 |
-- | 101        | 2019-06-30 |
-- | 105        | 2019-09-18 |
-- +------------+------------+

-- Result table:
-- +----------+---------+----------------+-----------------+-------------------+--------------------+
-- | month    | country | approved_count | approved_amount | chargeback_count  | chargeback_amount  |
-- +----------+---------+----------------+-----------------+-------------------+--------------------+
-- | 2019-05  | US      | 1              | 1000            | 1                 | 2000               |
-- | 2019-06  | US      | 3              | 12000           | 1                 | 1000               |
-- | 2019-09  | US      | 0              | 0               | 1                 | 5000               |
-- +----------+---------+----------------+-----------------+-------------------+--------------------+

-- #1 solution
--#sql server
SELECT 
	month
	,[country]
	,sum(case when [state]='approved' then 1 else 0 end)approved_count
	,sum(case when [state]='approved' then [amount] else 0 end)approved_amount
	,sum(case when [state]='chargeback' then 1 else 0 end)chargeback_count
	,sum(case when [state]='chargeback' then [amount] else 0 end)chargeback_amount 
from(
	SELECT 
		[country]
		,FORMAT([trans_date], 'yyyy-MM')month    
		,[state]
		,[amount]
	FROM [master].[dbo].[1205_transactions]
	union all
	SELECT [country]
		  , FORMAT([charge_date], 'yyyy-MM')month
		  ,'chargeback' as  [state]
		  ,[amount]
	FROM [master].[dbo].[1205_transactions]t
	inner join
	[master].[dbo].[1205_chargebacks]c
	on t.id=c.[trans_id]
	)t1
group by
	t1.[country]
	,t1.month
#2 solution
#mysql
Select 
	date_format(trans_date,'%Y-%m') month ,
	country,
	sum(case when state='approved' then 1 else 0 end)  approved_count,
	sum(case when state='approved' then amount else 0 end) approved_amount,
	country,sum(case when state='c' then 1 else 0 end)  chargeback_count,
	sum(case when state='c' then amount else 0 end) chargeback_amount
From
	(Select *
	From 1205_transactions
	Union all
	Select  c.trans_id,
		t.country,'c' state,
		t.amount, 
		c.charge_date
	From 1205_chargebacks c
	Inner join 1205_transactions t
	On c.trans_id=t.id
	)a
Group by month,country;




Create table 1205_transactions
(id              int     ,
country         varchar(2) ,
state           varchar(10) check ( state in( 'approved', 'declined' )) ,
amount          int     ,
trans_date      date ,
Primary key(id));

Insert into 1205_transactions values
(101  ,'US'      , 'approved' , 1000   , '2019-05-18'),
(102  , 'US'      , 'declined' , 2000   , '2019-05-19'),
(103  , 'US'      , 'approved' , 3000   , '2019-06-10'),
(104  , 'US'      , 'approved' , 4000   , '2019-06-13'),
(105  , 'US'      , 'approved' , 5000   , '2019-06-15');

Create table 1205_chargebacks
(trans_id        int ,
charge_date     date, 
index(trans_id),
Foreign key( trans_id)references   1205_transactions(id)   ON UPDATE CASCADE ON DELETE CASCADE);

Insert into 1205_chargebacks values
(102        , '2019-05-29'),
(101        , '2019-06-30'),
(105        , '2019-09-18');