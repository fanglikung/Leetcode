-- Table: Actions

-- +---------------+---------+
-- | Column Name   | Type    |
-- +---------------+---------+
-- | user_id       | int     |
-- | post_id       | int     |
-- | action_date   | date    |
-- | action        | enum    |
-- | extra         | varchar |
-- +---------------+---------+
-- There is no primary key for this table, it may have duplicate rows.
-- The action column is an ENUM type of ('view', 'like', 'reaction', 'comment', 'report', 'share').
-- The extra column has optional information about the action such as a reason for report or a type of reaction. 




-- Table: Removals

-- +---------------+---------+
-- | Column Name   | Type    |
-- +---------------+---------+
-- | post_id       | int     |
-- | remove_date   | date    | 
-- +---------------+---------+
-- post_id is the primary key of this table.
-- Each row in this table indicates that some post was removed as a result of being reported or as a result of an admin review.



-- Write an SQL query to find the average for daily percentage of posts that got removed after being reported as spam, rounded to 2 decimal places.

-- The query result format is in the following example:

-- Actions table:
-- +---------+---------+-------------+--------+--------+
-- | user_id | post_id | action_date | action | extra  |
-- +---------+---------+-------------+--------+--------+
-- | 1       | 1       | 2019-07-01  | view   | null   |
-- | 1       | 1       | 2019-07-01  | like   | null   |
-- | 1       | 1       | 2019-07-01  | share  | null   |
-- | 2       | 2       | 2019-07-04  | view   | null   |
-- | 2       | 2       | 2019-07-04  | report | spam   |
-- | 3       | 4       | 2019-07-04  | view   | null   |
-- | 3       | 4       | 2019-07-04  | report | spam   |
-- | 4       | 3       | 2019-07-02  | view   | null   |
-- | 4       | 3       | 2019-07-02  | report | spam   |
-- | 5       | 2       | 2019-07-03  | view   | null   |
-- | 5       | 2       | 2019-07-03  | report | racism |
-- | 5       | 5       | 2019-07-03  | view   | null   |
-- | 5       | 5       | 2019-07-03  | report | racism |
-- +---------+---------+-------------+--------+--------+

-- Removals table:
-- +---------+-------------+
-- | post_id | remove_date |
-- +---------+-------------+
-- | 2       | 2019-07-20  |
-- | 3       | 2019-07-18  |
-- +---------+-------------+

-- Result table:
-- +-----------------------+
-- | average_daily_percent |
-- +-----------------------+
-- | 75.00                 |
-- +-----------------------+
-- The percentage for 2019-07-04 is 50% because only one post of two spam reported posts was removed.
-- The percentage for 2019-07-02 is 100% because one post was reported as spam and it was removed.
-- The other days had no spam reports so the average is (50 + 100) / 2 = 75%
-- Note that the output is only one number and that we do not care about the remove dates.


#1 solution
#SQL Server
select  cast(round(avg(p) ,2)as decimal(9,2))average_daily_percent 
from(
SELECT [action_date]
	  ,case when sum(case when r.[post_id] is null then 0 else 1 end)=0 then 0 else cast(sum(case when r.[post_id] is null then 0 else 1 end) as decimal(9,2))/count(*) end as p
  FROM [master].[dbo].[1132_actions] a
  left join [1132_removals] r
  on a.[post_id]=r.[post_id] and a.[action_date]<=r.[remove_date]
  where a.action='report' and a.extra='spam'
  group by [action_date]
  )t1

#1 solution
#mysql

Select convert(avg(average_daily_percent)*100,decimal(4,2)) average_daily_percent
from(
Select a.action_date,
       sum(Case when r.post_id is null then 0 else 1 end )/count(a.action_date)as average_daily_percent
From 1132_actions a
Left join 1132_removals r
On a.post_id=r.post_id and a.action_date<=r.remove_date	 	
Where action='report' and extra='spam' 
Group by action_date)b;

Create table 1132_actions
(user_id        int     ,
post_id        int     ,
action_date    date    ,
action         varchar(8) check  (action   in ('view', 'like', 'reaction', 'comment', 'report', 'share')),
extra          varchar(6) );

Insert into 1132_actions values
(1       , 1       , '2019-07-01'  , 'view'   , null   ),
(1       , 1       , '2019-07-01'  , 'like'   , null   ),
(1       , 1       , '2019-07-01'  , 'share'  , null   ),
(2       , 2       , '2019-07-04'  , 'view'   , null   ),
(2       , 2       , '2019-07-04'  , 'report' , 'spam'   ),
(3       , 4       , '2019-07-04'  , 'view'   , null   ),
(3       , 4       , '2019-07-04'  , 'report' , 'spam'   ),
(4       , 3       , '2019-07-02'  , 'view'   , null   ),
(4       , 3       , '2019-07-02'  , 'report' , 'spam'   ),
(5       , 2       , '2019-07-03'  , 'view'   , null   ),
(5       , 2       , '2019-07-03'  , 'report' , 'racism' ),
(5       , 5       , '2019-07-03'  , 'view'   , null   ),
(5       , 5       , '2019-07-03'  , 'report' , 'racism');

Create table 1132_removals
(post_id int,
remove_date date,
Primary key(post_id));
Insert into 1132_removals values
(2       , '2019-07-20'),
(3    ,'2019-07-18');#1 solution
#mysql