-- Table: Transactions

-- +---------------+---------+
-- | Column Name   | Type    |
-- +---------------+---------+
-- | id            | int     |
-- | country       | varchar |
-- | state         | enum    |
-- | amount        | int     |
-- | trans_date    | date    |
-- +---------------+---------+
-- id is the primary key of this table.
-- The table has information about incoming transactions.
-- The state column is an enum of type ["approved", "declined"].
 

-- Write an SQL query to find for each month and country, the number of transactions and their total amount, the number of approved transactions and their total amount.

-- The query result format is in the following example:

-- Transactions table:
-- +------+---------+----------+--------+------------+
-- | id   | country | state    | amount | trans_date |
-- +------+---------+----------+--------+------------+
-- | 121  | US      | approved | 1000   | 2018-12-18 |
-- | 122  | US      | declined | 2000   | 2018-12-19 |
-- | 123  | US      | approved | 2000   | 2019-01-01 |
-- | 124  | DE      | approved | 2000   | 2019-01-07 |
-- +------+---------+----------+--------+------------+

-- Result table:
-- +----------+---------+-------------+----------------+--------------------+-----------------------+
-- | month    | country | trans_count | approved_count | trans_total_amount | approved_total_amount |
-- +----------+---------+-------------+----------------+--------------------+-----------------------+
-- | 2018-12  | US      | 2           | 1              | 3000               | 1000                  |
-- | 2019-01  | US      | 1           | 1              | 2000               | 2000                  |
-- | 2019-01  | DE      | 1           | 1              | 2000               | 2000                  |
-- +----------+---------+-------------+----------------+--------------------+-----------------------+


#1 solution
#mysql
Select 
	date_format(trans_date,'%Y-%m') month ,
	country,
	count(state) trans_count,
	sum(case when state='approved' then 1 else 0 end)  approved_count,
	sum(amount) trans_total_amount,
	sum(case when state='approved' then amount else 0 end) approved_amount
From 1193_transactions
Group by month,country;




Create table 1193_transactions
(id            int     ,
country        varchar (2),
state          varchar(10) check (state in('approved', 'declined'))   ,
amount         int     ,
trans_date     date,
Primary key(id)  ); 

Insert into 1193_transactions values
( 121 , 'US'      ,'approved',  1000   , '2018-12-18' ),
(122  , 'US'      ,'declined',  2000   , '2018-12-19' ),
(123  , 'US'      ,'approved',  2000   , '2019-01-01' ),
(124  , 'DE'      ,'approved',  2000   , '2019-01-07' );
